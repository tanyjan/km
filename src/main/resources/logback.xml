<?xml version="1.0" encoding="UTF-8"?>
<configuration>
	<property name="LOG_FILE_DIR" value="logs"></property>
	<appender name="console" class="ch.qos.logback.core.ConsoleAppender">
		<encoder charset="UTF-8">
			<pattern>[%d{yyyy-MM-dd HH:mm:ss.SSS}][%thread] %-5level
				%logger{36}[%line] - %msg%n</pattern>
		</encoder>
	</appender>

	<appender name="rollingFile"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>TRACE</level>
		</filter>
		<!-- 按照大小生成日志 -->
		<File>${LOG_FILE_DIR}/trace.log</File>

		<!-- 此处的日志不打印ERROR级别 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>DENY</onMatch>
			<onMismatch>ACCEPT</onMismatch>
		</filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<FileNamePattern>${LOG_FILE_DIR}/error.log.%i.bak
			</FileNamePattern>
			<MinIndex>1</MinIndex>
			<MaxIndex>100</MaxIndex><!-- 只保存100个日志 --> <!-- logback中限制了最大的值是20个，所以此处写的100其实还是只能保存21个(源代码中使用了开区间进行比较，所以是21个) -->
		</rollingPolicy>
		<!--日志文件最大的大小 -->
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>200MB</MaxFileSize>
		</triggeringPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level
				%logger{36}[%line] - %msg%n</Pattern>
		</layout>
	</appender>

	<appender name="errorRollingFile"
		class="ch.qos.logback.core.rolling.RollingFileAppender">
		<filter class="ch.qos.logback.classic.filter.ThresholdFilter">
			<level>TRACE</level>
		</filter>

		<!-- 按照大小生成日志 -->
		<File>${LOG_FILE_DIR}/trace_error.log</File>

		<!-- 此处的日志只打印ERROR级别 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>ERROR</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<!-- 此处的日志只打印WARN级别 -->
		<filter class="ch.qos.logback.classic.filter.LevelFilter">
			<level>WARN</level>
			<onMatch>ACCEPT</onMatch>
			<onMismatch>DENY</onMismatch>
		</filter>
		<rollingPolicy class="ch.qos.logback.core.rolling.FixedWindowRollingPolicy">
			<FileNamePattern>${LOG_FILE_DIR}/warn_error.log.%i.bak
			</FileNamePattern>
			<MinIndex>1</MinIndex>
			<MaxIndex>100</MaxIndex><!-- 只保存100个日志 --> <!-- logback中限制了最大的值是20个，所以此处写的100其实还是只能保存21个(源代码中使用了开区间进行比较，所以是21个) -->
		</rollingPolicy>
		<!--日志文件最大的大小 -->
		<triggeringPolicy
			class="ch.qos.logback.core.rolling.SizeBasedTriggeringPolicy">
			<MaxFileSize>200MB</MaxFileSize>
		</triggeringPolicy>
		<layout class="ch.qos.logback.classic.PatternLayout">
			<Pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level
				%logger{36}[%line] - %msg%n</Pattern>
		</layout>

	</appender>
	<!-- 异步输出 -->
	<appender name="ASYNC" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>512</queueSize>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref="rollingFile" />
		<includeCallerData>true</includeCallerData>
	</appender>
	<!-- 异步输出 -->
	<appender name="ASYNC_ERROR" class="ch.qos.logback.classic.AsyncAppender">
		<!-- 不丢失日志.默认的,如果队列的80%已满,则会丢弃TRACT、DEBUG、INFO级别的日志 -->
		<discardingThreshold>0</discardingThreshold>
		<!-- 更改默认的队列的深度,该值会影响性能.默认值为256 -->
		<queueSize>512</queueSize>
		<!-- 添加附加的appender,最多只能添加一个 -->
		<appender-ref ref="errorRollingFile" />
		<includeCallerData>true</includeCallerData>
	</appender>
	<!-- project default level -->
	<logger name="cn.testschd" level="INFO" />

	<root level="INFO">
		 <appender-ref ref="ASYNC" /> <appender-ref ref="ASYNC_ERROR" />
	 <appender-ref ref="console" /> 
	</root>

</configuration>